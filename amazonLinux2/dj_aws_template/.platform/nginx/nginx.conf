# Elastic Beanstalk Nginx Configuration File

user  nginx;
worker_processes  auto;
worker_rlimit_nofile 20000; 
error_log  /var/log/nginx/error.log;

pid        /var/run/nginx.pid;

events {
    worker_connections  10000;   #最大連接數
    # optimized to serve many clients with each thread, essential for linux -- for testing environment
    use epoll; # important
    # accept as many connections as possible, may flood worker connections if set too low -- for testing environment
    multi_accept on; # important
}
                             
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    access_log    /var/log/nginx/access.log;
    log_format  healthd '$msec"$uri"$status"$request_time"$upstream_response_time"$http_x_forwarded_for';
    #Just For Security Reason
    server_tokens off; 

    # request timed out -- default 60
    #client_body_timeout 10;

    # if client stop responding, free up memory -- default 60
    #send_timeout 10;
    # server will close connection after this time -- default 75
    keepalive_timeout 90;
    # number of requests client can make over keep-alive -- for testing environment
    keepalive_requests 10000;
    # to boost I/O on HDD we can disable access logs
    #access_log off;

    # send headers in one piece, it is better than sending them one by one
    tcp_nopush on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;

    #upstream docker {               
    #server 0.0.0.0:8000;     
    #keepalive 300;              
    #}  
    
    # the upstream component nginx needs to connect to
    upstream streamTarget {
        #server 172.17.0.3:8000;;  # use TCP
        #keepalive 300;
        server unix:/var/app/current/app.sock; # for a file socket
    }
    #include       /etc/nginx/sites-enabled/*;
    map $http_upgrade $connection_upgrade {
        default        "upgrade";
        ""            "";
    }
    # configuration of the server
    server {
        # the port your site will be served on
        listen    80;
        if ($time_iso8601 ~ "^(\d{4})-(\d{2})-(\d{2})T(\d{2})") {
            set $year $1;
            set $month $2;
            set $day $3;
            set $hour $4;
        }
        access_log /var/log/nginx/healthd/application.log.$year-$month-$day-$hour healthd;
        access_log    /var/log/nginx/access.log;
        location /static {
            alias /var/app/current/static; # your Django project's static files - amend as required
        }
        
        # index  index.html;
        # the domain name it will serve for
        # substitute your machine's IP address or FQDN
        server_name  localhost;
        charset     utf-8;
        client_max_body_size 75M;   # adjust to taste
        gzip on;
        gzip_comp_level 4;
        gzip_types text/html text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
        location / {
            #proxy_http_version 1.1;   
            #uwsgi_pass 127.0.0.1:8000;
            uwsgi_pass  streamTarget;
            # nginx CORS
            # nginx+uwssgi issuse
            # https://github.com/unbit/uwsgi/issues/1550
            
             #add_header 'Access-Control-Allow-Origin' '*';
             #add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
             #add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
             #add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            include     /etc/nginx/uwsgi_params; # the uwsgi_params file you installed
            # Include the Elastic Beanstalk generated locations
            # include /etc/nginx/conf.d/elasticbeanstalk/00_application.conf;

            uwsgi_read_timeout 120s;
            uwsgi_send_timeout 120s;
            uwsgi_connect_timeout 120s;
            # uwsgi_ignore_client_abort on; # when a client closes the connection then keep the channel to uwsgi open. Otherwise uwsgi throws an IOError
        }

    }
}